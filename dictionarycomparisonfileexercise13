#! /bin/bash
cat $1 | tr '[:punct:],[:blank:]' '\n'|tr '[:upper:]' '[:lower:]'|grep -v '^$'|sort|uniq>filedictionary.txt
sort dict>dictsort
comm -1 -3 dictsort filedictionary.txt>misspelledwords.txt
# Argument $1 is the name of the file to be searched, it is printed by cat and piped
#tr is used twice, tr '[:punct:],[:blank:]' '\n' to substitute all punctuation signs [:punct:] and blank space [:blank:] with carriage returns
#tr '[:upper:]' '[:lower:]' substitutes all upper case letters [:upper] with lower case letters [:lower:]
#sort sorts the result alphabetically as for a dictionary of unique words. Useful for later
#uniq prints out all the unique words on the input file $1, sorted, into a filedictionary.txt file 
#as the comm utility in the line below tells us that the dictionary given us is not sorted, we have to sort it first. But we keep the original, creating 'dictsort' file
#lastly comm utility compares the filedictionary.txt and dictsort files, keeping only the column 2, with words unique to filedictionary.txt, not present in our template dictionary, which must mean they are mispelled. This is piped into a misspelledwords.txt file
